version: "3.7"
x-airflow-common: &airflow-common
  build:
    context: .
    target: airflow
  environment: &airflow-common-env
    AIRFLOW_FERNET_KEY: Z2uDm0ZL60fXNkEXG8LW99Ki2zf8wkmIltaTz1iQPDU=
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    AIRFLOW_CONN_FOOD_DELIVERY_DB: postgres://food_delivery:food_delivery@postgres:5432/food_delivery
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "False"
    MARQUEZ_NAMESPACE: food_delivery
    MARQUEZ_LOG_LEVEL: DEBUG
  volumes:
    - ./airflow/config/log_config.py:/opt/airflow/config/log_config.py
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs:rw

services:
  integration:
    build:
      context: .
      target: integration
    volumes:
      - ./docker/wait-for-it.sh:/wait-for-it.sh
    depends_on:
      - airflow
      - marquez
    entrypoint: ["./wait-for-it.sh", "marquez:5000", "--", "./entrypoint.sh"]

  airflow:
    <<: *airflow-common
    ports:
      - "8080:8080"
    command: webserver
    depends_on:
      - airflow_scheduler
      - postgres
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow_scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: [ "CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"' ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow_worker:
    <<: *airflow-common
    command: celery worker
    restart: always
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'celery --app airflow.executors.celery_executor.app inspect ping -d "celery@$${HOSTNAME}"'
      interval: 10s
      timeout: 10s
      retries: 5

  marquez:
    image: marquezproject/marquez:latest
    ports:
      - "5000:5000"
      - "5001:5001"
    volumes:
      - ./docker/wait-for-it.sh:/usr/src/app/wait-for-it.sh
    depends_on:
      - postgres
    entrypoint: ["./wait-for-it.sh", "postgres:5432", "--", "./entrypoint.sh"]
    # Enables SQL statement logging (see: https://www.postgresql.org/docs/12/runtime-config-logging.html#GUC-LOG-STATEMENT)
    # command: ["postgres", "-c", "log_statement=all"]

  airflow-init:
    <<: *airflow-common
    command: db init
    environment:
      <<: *airflow-common-env
#      _AIRFLOW_DB_UPGRADE: 'true'
#      _AIRFLOW_WWW_USER_CREATE: 'true'
#      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
#      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}

  redis:
    image: redis:latest
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always

  postgres:
    image: bitnami/postgresql:12.1.0
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - AIRFLOW_USER=airflow
      - AIRFLOW_PASSWORD=airflow
      - AIRFLOW_DB=airflow
      - MARQUEZ_USER=marquez
      - MARQUEZ_PASSWORD=marquez
      - MARQUEZ_DB=marquez
      - FOOD_DELIVERY_USER=food_delivery
      - FOOD_DELIVERY_PASSWORD=food_delivery
      - FOOD_DELIVERY_DB=food_delivery
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./docker/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh

  redis:
    image: bitnami/redis:6.0.6
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
